/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */

struct TreeNode * node_init(int n){
    struct TreeNode * temp = malloc(sizeof(struct TreeNode));
    temp->val = n;
    temp->left = NULL;
    temp->right = NULL;
    return temp;
    }

struct TreeNode* buildhelper(int* inorder, int inorderSize, int* postorder, int postorderSize,int is,int ie,int ps,int pe){
    int i=0,len=0,leftlen=0,rightlen=0;
    int tempin=0,temppost=0;
    if((is>ie)||(ps>pe)){
        return NULL;
        }
    len=ie-is+1;
    struct TreeNode * root=node_init(postorder[pe]);
    for(i=is;i<=ie;i++){
        if(inorder[i]==postorder[pe]){
            break;
            }
        leftlen++;
        }
    rightlen=len-leftlen-1;
    
    if(leftlen>0){
        tempin=is;
        temppost=ps;
        root->left=buildhelper(inorder,inorderSize,postorder,postorderSize,tempin,tempin+leftlen-1,temppost,temppost+leftlen-1);
        }
    if(rightlen>0){
        tempin=i+1;
        temppost=ps+leftlen;
        root->right=buildhelper(inorder,inorderSize,postorder,postorderSize,tempin,tempin+rightlen-1,temppost,temppost+rightlen-1);
    }
    return root;
}
struct TreeNode* buildTree(int* inorder, int inorderSize, int* postorder, int postorderSize){
    int is=0;
    int ie=inorderSize-1;
    int ps=0;
    int pe=ie;
    struct TreeNode * ret=buildhelper(inorder,inorderSize,postorder,postorderSize,is,ie,ps,pe);
    return ret;
}
